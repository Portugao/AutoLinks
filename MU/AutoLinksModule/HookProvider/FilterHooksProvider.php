<?php
/**
 * AutoLinks.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <info@homepages-mit-zikula.de>.
 * @link https://homepages-mit-zikula.de
 * @link https://ziku.la
 * @version Generated by ModuleStudio (https://modulestudio.de).
 */

namespace MU\AutoLinksModule\HookProvider;

use Zikula\Bundle\HookBundle\Hook\FilterHook;
use MU\AutoLinksModule\HookProvider\Base\AbstractFilterHooksProvider;

use MU\AutoLinksModule\Entity\Factory\EntityFactory;
use Zikula\Common\Translator\TranslatorInterface;

/**
 * Implementation class for filter hooks provider.
 */
class FilterHooksProvider extends AbstractFilterHooksProvider
{
    /**
     * @var EntityFactory
     */
    protected $entityFactory;
    
    /**
     * FilterHooksProvider constructor.
     *
     * @param TranslatorInterface $translator
     */
    public function __construct(TranslatorInterface $translator,
        EntityFactory $entityFactory)
    {
        $this->translator = $translator;
        $this->entityFactory = $entityFactory;
    }
    
    /**
     * @inheritDoc
     */
    public function applyFilter(FilterHook $hook)
    {
        $content = $hook->getData();
        $autoLinks = array();
        $linkRepository = $this->entityFactory->getRepository('autoLink');
        $autoLinks = $linkRepository->findAll();
        foreach ($autoLinks as $autoLink) {
            $content = str_replace('#' . $autoLink['supportedString'] . '#', '<a href="' . $autoLink['neededLink'] . '">' . ' ' . $autoLink['supportedString'] . '</a>*', $content);
        }
        $hook->setData($content);
    }
    
    protected function setEntityFactory(EntityFactory $entityFactory) {
        $this->entityFactory = $entityFactory;
    }

    // feel free to add your own convenience methods here
}

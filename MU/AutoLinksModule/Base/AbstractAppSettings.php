<?php
/**
 * AutoLinks.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <info@homepages-mit-zikula.de>.
 * @link https://homepages-mit-zikula.de
 * @link https://ziku.la
 * @version Generated by ModuleStudio (https://modulestudio.de).
 */

namespace MU\AutoLinksModule\Base;

use Symfony\Component\Validator\Constraints as Assert;
use Zikula\ExtensionsModule\Api\ApiInterface\VariableApiInterface;

/**
 * Application settings class for handling module variables.
 */
abstract class AbstractAppSettings
{
    /**
     * @var VariableApiInterface
     */
    protected $variableApi;
    
    /**
     * The amount of auto links shown per page
     *
     * @Assert\Type(type="integer")
     * @Assert\NotBlank()
     * @Assert\NotEqualTo(value=0)
     * @Assert\LessThan(value=100000000000)
     * @var integer $autoLinkEntriesPerPage
     */
    protected $autoLinkEntriesPerPage = 10;
    
    /**
     * Whether only own entries should be shown on view pages by default or not
     *
     * @Assert\NotNull()
     * @Assert\Type(type="bool")
     * @var boolean $showOnlyOwnEntries
     */
    protected $showOnlyOwnEntries = false;
    
    /**
     * Whether to allow moderators choosing a user which will be set as creator.
     *
     * @Assert\NotNull()
     * @Assert\Type(type="bool")
     * @var boolean $allowModerationSpecificCreatorForAutoLink
     */
    protected $allowModerationSpecificCreatorForAutoLink = false;
    
    /**
     * Whether to allow moderators choosing a custom creation date.
     *
     * @Assert\NotNull()
     * @Assert\Type(type="bool")
     * @var boolean $allowModerationSpecificCreationDateForAutoLink
     */
    protected $allowModerationSpecificCreationDateForAutoLink = false;
    
    
    /**
     * AppSettings constructor.
     *
     * @param VariableApiInterface $variableApi VariableApi service instance
     */
    public function __construct(
        VariableApiInterface $variableApi
    ) {
        $this->variableApi = $variableApi;
    
        $this->load();
    }
    
    /**
     * Returns the auto link entries per page.
     *
     * @return integer
     */
    public function getAutoLinkEntriesPerPage()
    {
        return $this->autoLinkEntriesPerPage;
    }
    
    /**
     * Sets the auto link entries per page.
     *
     * @param integer $autoLinkEntriesPerPage
     *
     * @return void
     */
    public function setAutoLinkEntriesPerPage($autoLinkEntriesPerPage)
    {
        if (intval($this->autoLinkEntriesPerPage) !== intval($autoLinkEntriesPerPage)) {
            $this->autoLinkEntriesPerPage = intval($autoLinkEntriesPerPage);
        }
    }
    
    /**
     * Returns the show only own entries.
     *
     * @return boolean
     */
    public function getShowOnlyOwnEntries()
    {
        return $this->showOnlyOwnEntries;
    }
    
    /**
     * Sets the show only own entries.
     *
     * @param boolean $showOnlyOwnEntries
     *
     * @return void
     */
    public function setShowOnlyOwnEntries($showOnlyOwnEntries)
    {
        if (boolval($this->showOnlyOwnEntries) !== boolval($showOnlyOwnEntries)) {
            $this->showOnlyOwnEntries = boolval($showOnlyOwnEntries);
        }
    }
    
    /**
     * Returns the allow moderation specific creator for auto link.
     *
     * @return boolean
     */
    public function getAllowModerationSpecificCreatorForAutoLink()
    {
        return $this->allowModerationSpecificCreatorForAutoLink;
    }
    
    /**
     * Sets the allow moderation specific creator for auto link.
     *
     * @param boolean $allowModerationSpecificCreatorForAutoLink
     *
     * @return void
     */
    public function setAllowModerationSpecificCreatorForAutoLink($allowModerationSpecificCreatorForAutoLink)
    {
        if (boolval($this->allowModerationSpecificCreatorForAutoLink) !== boolval($allowModerationSpecificCreatorForAutoLink)) {
            $this->allowModerationSpecificCreatorForAutoLink = boolval($allowModerationSpecificCreatorForAutoLink);
        }
    }
    
    /**
     * Returns the allow moderation specific creation date for auto link.
     *
     * @return boolean
     */
    public function getAllowModerationSpecificCreationDateForAutoLink()
    {
        return $this->allowModerationSpecificCreationDateForAutoLink;
    }
    
    /**
     * Sets the allow moderation specific creation date for auto link.
     *
     * @param boolean $allowModerationSpecificCreationDateForAutoLink
     *
     * @return void
     */
    public function setAllowModerationSpecificCreationDateForAutoLink($allowModerationSpecificCreationDateForAutoLink)
    {
        if (boolval($this->allowModerationSpecificCreationDateForAutoLink) !== boolval($allowModerationSpecificCreationDateForAutoLink)) {
            $this->allowModerationSpecificCreationDateForAutoLink = boolval($allowModerationSpecificCreationDateForAutoLink);
        }
    }
    
    
    /**
     * Loads module variables from the database.
     */
    protected function load()
    {
        $moduleVars = $this->variableApi->getAll('MUAutoLinksModule');
    
        if (isset($moduleVars['autoLinkEntriesPerPage'])) {
            $this->setAutoLinkEntriesPerPage($moduleVars['autoLinkEntriesPerPage']);
        }
        if (isset($moduleVars['showOnlyOwnEntries'])) {
            $this->setShowOnlyOwnEntries($moduleVars['showOnlyOwnEntries']);
        }
        if (isset($moduleVars['allowModerationSpecificCreatorForAutoLink'])) {
            $this->setAllowModerationSpecificCreatorForAutoLink($moduleVars['allowModerationSpecificCreatorForAutoLink']);
        }
        if (isset($moduleVars['allowModerationSpecificCreationDateForAutoLink'])) {
            $this->setAllowModerationSpecificCreationDateForAutoLink($moduleVars['allowModerationSpecificCreationDateForAutoLink']);
        }
    }
    
    /**
     * Saves module variables into the database.
     */
    public function save()
    {
        $this->variableApi->set('MUAutoLinksModule', 'autoLinkEntriesPerPage', $this->getAutoLinkEntriesPerPage());
        $this->variableApi->set('MUAutoLinksModule', 'showOnlyOwnEntries', $this->getShowOnlyOwnEntries());
        $this->variableApi->set('MUAutoLinksModule', 'allowModerationSpecificCreatorForAutoLink', $this->getAllowModerationSpecificCreatorForAutoLink());
        $this->variableApi->set('MUAutoLinksModule', 'allowModerationSpecificCreationDateForAutoLink', $this->getAllowModerationSpecificCreationDateForAutoLink());
    }
}
